format = """
[](fg:#9A348E)\
$username\
$os\
[](fg:#9A348E bg:#DA627D)\
$shlvl\
$hostname\
$nix_shell\
[](fg:#DA627D bg:#33658A)\
$directory\
[](fg:#33658A bg:#FCA17D)\
$git_branch\
$git_status\
[](fg:#FCA17D bg:#86BBD8)\
$bun\
$c\
$container\
$dart\
$docker_context\
$golang\
$helm\
$java\
$kotlin\
$kubernetes\
$nodejs\
$ruby\
$rust\
$swift\
$vagrant\
[](fg:#86BBD8 bg:#9A348E)\
[](fg:#9A348E)
\\$ """

# Handy format strings for debugging, add to the beginning of the appropriate
# section of the prompt above (without the leading '# ').
# [ Remote ](bg:#DA627D)\
# [ Lang Environment ](fg:#202020 bg:#86BBD8)\
# [ Docker Context ](bg:#9A348E)\

# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# Disable the blank line at the start of the prompt
# add_newline = false

# You can also replace your username with a neat symbol like   or disable this
# and use the os module below
[username]
show_always = true
style_user = "fg:#EEEEEE bg:#9A348E"
style_root = "fg:#EE0000 bg:#9A348E"
format = '[$user]($style)'
disabled = false

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
format = '[\($symbol\)]($style)'
style = "fg:#EEEEEE bg:#9A348E"
disabled = false

# redefine OS emojis without trailing spaces, ugh
[os.symbols]
Arch = "🎗️"
CentOS = "💠"
Debian = "🌀"
Fedora = "🎩"
FreeBSD = "😈"
Linux = "🐧"
Macos = "🍎"
Mint = "🌿"
NixOS = "❄️"
OpenBSD = "🐡"
openSUSE = "🦎"
Redhat = "🎩"
RedHatEnterprise = "🎩"
SUSE = "🦎"
Unknown = "❓"
Ubuntu = "🎯"
Windows = ""

[shlvl]
format='[ $symbol$shlvl ]($style)'
style = "bg:#DA627D"
disabled = false

[hostname]
format='[ $ssh_symbol$hostname ]($style)'
trim_at='.'
ssh_symbol='🌏'
style = "bg:#DA627D"
disabled = false

[nix_shell]
symbol='❄️'
style = "bg:#DA627D"
heuristic = true
format = '[ $symbol $name ]($style)'
disabled = false

[directory]
style = "bg:#33658A"
format = "[ $path ]($style)"
truncation_length = 3
truncation_symbol = "…/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"~" = "\uf7dd "
"~/Development" = "\ue5fb "
"~/Downloads" = "  "
"Documents" = "\U000f19f6 "
"Music" = "  "
"Pictures" = "  "
# Keep in mind that the order matters. For example:
# "Important Documents " = "\U000f19f6 "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important \U000f19f6 " = "\U000f19f6 "

[git_branch]
style = "fg:#202020 bg:#FCA17D"
format = '[ $symbol($branch) ]($style)'

[git_status]
style = "fg:#202020 bg:#FCA17D"
format = '[ $all_status$ahead_behind ]($style)'

[time]
disabled = true
time_format = "%R" # Hour:Minute Format
style = "bg:#33658A"
format = '[ $time ]($style)'

################################################################

[bun]
format = '[ 🍔($version) ]($style)'

[c]
style = "fg:#202020 bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[container]
format = '[ $symbol($name) ]($style)'

[dart]
format = '[ $symbol($version ) ]($style)'

[docker_context]
format = '[ $symbol($context) ]($style)'

[golang]
style = "fg:#202020 bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[helm]
format = '[ $symbol($version ) ]($style)'

[java]
symbol = " "
style = "fg:#202020 bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[kotlin]
format = '[ $symbol($version ) ]($style)'

[kubernetes]
format = '[ $symbol$context(\($namespace\)) ]($style)'
#disabled = false

[nodejs]
symbol = ""
style = "fg:#202020 bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[ruby]
style = "fg:#202020 bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[rust]
style = "fg:#202020 bg:#86BBD8"
format = '[ $symbol($version) ]($style)'

[swift]
format = '[ $symbol($version) ]($style)'

[vagrant]
format = '[ $symbol($version) ]($style)'
